openapi: 3.0.3
info:
  title: exo6
  version: "1.0.0"

paths:
  /users/{id}:
    get:
      summary: Récupérer un utilisateur complet
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Utilisateur complet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
              examples:
                exempleNoob:
                  summary: Exemple simple d’utilisateur
                  value:
                    identifier: "u123"
                    personalInfo:
                      first_name: "Alice"
                      last_name: "Rabe"
                      birthdate: "1990-01-01"
                      email: "alice@example.com"
                    address:
                      street: "Rue A"
                      city: "Antananarivo"
                      country: "MG"
                      postal_code: 101
                    preferences:
                      needs_newsletter: true
                      language: "fr"

  /users:
    post:
      summary: Créer des utilisateurs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            examples:
              exempleNoob:
                summary: Création simple
                value:
                  - personalInfo:
                      first_name: "Bob"
                      last_name: "Andria"
                      birthdate: "1985-05-05"
                      email: "bob@example.com"
                    address:
                      street: "Rue B"
                      city: "Fianarantsoa"
                      country: "MG"
                      postal_code: 301
                    preferences:
                      needs_newsletter: false
                      language: "mg"
      responses:
        '201':
          description: Utilisateurs créés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'

  /users/{id}/personalInfo:
    put:
      summary: Mettre à jour uniquement les informations personnelles
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
      responses:
        '200':
          description: Informations personnelles mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalInfo'

  /users/{id}/address:
    put:
      summary: Mettre à jour uniquement l’adresse
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: Adresse mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'

  /users/{id}/preferences:
    put:
      summary: Mettre à jour uniquement les préférences
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: Préférences mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'

components:
  parameters:
    UserId:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Identifiant unique de l’utilisateur

  schemas:
    UserProfile:
      type: object
      properties:
        identifier:
          type: string
        personalInfo:
          $ref: '#/components/schemas/PersonalInfo'
        address:
          $ref: '#/components/schemas/Address'
        preferences:
          $ref: '#/components/schemas/Preferences'

    CreateUserProfile:
      type: object
      properties:
        personalInfo:
          $ref: '#/components/schemas/PersonalInfo'
        address:
          $ref: '#/components/schemas/Address'
        preferences:
          $ref: '#/components/schemas/Preferences'

    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        birthdate:
          type: string
          format: date
        email:
          type: string
          format: email

    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        country:
          type: string
        postal_code:
          type: integer

    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
        language:
          type: string
          enum: [mg, fr, eng]
